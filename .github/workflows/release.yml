name: Release Pipeline

on:
  push:
    branches:
      - 'release/**'
  workflow_dispatch:
    inputs:
      rollback_version:
        description: 'Version to rollback to (e.g., v1.0.0)'
        required: true
        type: string
      rollback_reason:
        description: 'Reason for rollback'
        required: true
        type: string

env:
  NODE_VERSION: '20'
  VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
  VITE_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
  VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
  VITE_APP_VERSION: ${{ github.ref_name }}

jobs:
  # Build and deploy for release branches
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Create deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: dist/
        retention-days: 30

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
        path: dist

    - name: Extract version from branch name
      id: version
      run: |
        BRANCH_NAME="${{ github.ref_name }}"
        VERSION=$(echo $BRANCH_NAME | sed 's/release\///')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Deploying version: $VERSION"

    - name: Create release tag
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git tag -a "${{ steps.version.outputs.version }}" -m "Release ${{ steps.version.outputs.version }}"
        git push origin "${{ steps.version.outputs.version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: fakhrymubarak.github.io

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "${{ steps.version.outputs.version }}"
        name: "Release ${{ steps.version.outputs.version }}"
        body: |
          ## Release v${{ steps.version.outputs.version }}
          
          This release was automatically deployed from branch `${{ github.ref_name }}`.
          
          **Deployment Details:**
          - Branch: ${{ github.ref_name }}
          - Commit: ${{ github.sha }}
          - Triggered by: ${{ github.actor }}
          - Timestamp: ${{ github.event.head_commit.timestamp }}
        draft: false
        prerelease: false
        generate_release_notes: true

  # Manual rollback workflow
  rollback:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.rollback_version != ''

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Checkout specific version
      run: |
        git fetch --tags
        git checkout "v${{ github.event.inputs.rollback_version }}"

    - name: Build application
      run: npm run build

    - name: Deploy rollback to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: fakhrymubarak.github.io

    - name: Create rollback notification
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "rollback-${{ github.event.inputs.rollback_version }}-${{ github.run_number }}"
        name: "Rollback to ${{ github.event.inputs.rollback_version }}"
        body: |
          ## Rollback to ${{ github.event.inputs.rollback_version }}
          
          **Rollback Details:**
          - Rollback Version: ${{ github.event.inputs.rollback_version }}
          - Reason: ${{ github.event.inputs.rollback_reason || 'No reason provided' }}
          - Triggered by: ${{ github.actor }}
          - Timestamp: ${{ github.event.head_commit.timestamp }}
          - Workflow Run: #${{ github.run_number }}
          
          This is a rollback deployment to address issues with the current release.
        draft: false
        prerelease: true

    - name: Notify rollback completion
      run: |
        echo "Rollback to v${{ github.event.inputs.rollback_version }} completed successfully"
        echo "Reason: ${{ github.event.inputs.rollback_reason || 'No reason provided' }}"
        echo "Triggered by: ${{ github.actor }}"
