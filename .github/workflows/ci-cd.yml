name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  NODE_VERSION: '18'

jobs:
  # Lint and Type Check
#  lint-and-type-check:
#    name: Lint and Type Check
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: ${{ env.NODE_VERSION }}
#          cache: 'npm'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Run ESLint
#        run: npm run lint
#
#      - name: Run TypeScript type check
#        run: npm run type-check
#
#      - name: Run Prettier check
#        run: npm run format:check || true

  # Build and Test
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: lint-and-type-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci

#      - name: Run tests
#        run: npm test -- --coverage --watchAll=false

      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 7

  # Deploy to GitHub Pages (only on master branch)
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Security Audit
#  security-audit:
#    name: Security Audit
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: ${{ env.NODE_VERSION }}
#          cache: 'npm'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Run security audit
#        run: npm audit --audit-level=moderate
#
#      - name: Check for vulnerabilities
#        run: |
#          if npm audit --audit-level=high; then
#            echo "High severity vulnerabilities found!"
#            exit 1
#          fi

  # Performance Check
#  performance-check:
#    name: Performance Check
#    runs-on: ubuntu-latest
#    needs: build-and-test
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Download build artifacts
#        uses: actions/download-artifact@v4
#        with:
#          name: build-files
#          path: dist/
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: ${{ env.NODE_VERSION }}
#
#      - name: Install Lighthouse CI
#        run: npm install -g @lhci/cli@0.12.x
#
#      - name: Run Lighthouse CI
#        run: |
#          lhci autorun
#        env:
#          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}